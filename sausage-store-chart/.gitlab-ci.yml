variables:
  VERSION: 0.1.${CI_PIPELINE_ID}
  
stages:
  - release
  - deploy

upload-helm:
  stage: release
  image: dtzar/helm-kubectl

  before_script:
    - mkdir -p .kube
    - echo "${KUBECONFIG}" | base64 -d > .kube/config

  script:
    - cd sausage-store-chart
    - helm package --version $VERSION ./
    - curl -v -u "$NEXUS_REPO_USER:$NEXUS_REPO_PASS" --upload-file sausage-store-${VERSION}.tgz ${NEXUS_REPO_HELM_URL}
  
  after_script:
    - rm .kube/config

deploy-helm:
  #test
  stage: deploy
  image: dtzar/helm-kubectl
  when: manual
  
  before_script:
    - mkdir -p .kube
    - echo "${KUBECONFIG}" | base64 -d > .kube/config

  script:
    - helm repo add nexus $NEXUS_REPO_HELM_URL --username ${NEXUS_REPO_USER} --password "$NEXUS_REPO_PASS"
    - helm repo update
    - >
      helm upgrade --install sausage-store \
        --set environment=test \
        --set frontend.fqdn=${SAUSAGE_STORE_URL} \
        --set secrets.vaultToken=${VAULT_TOKEN} \
        --set secrets.vaultHost=${VAULT_HOST} \
        --set secrets.dockerConfigJson=${DOCKER_CONFIG_JSON} \
        --atomic --timeout 15m \
        --kubeconfig .kube/config \
          nexus/sausage-store
  after_script:
    - rm .kube/config
  
  environment:
    name: helm-pack
    url: https://$SAUSAGE_STORE_URL

deploy-argocd:
  stage: deploy
  image: argoproj/argocd:v2.5.2
  when: manual
  
  script:
    - >
      argocd --grpc-web --auth-token $ARGO_TOKEN \
            --server $ARGO_URL app set $ARGO_APPLICATION_NAME --revision $VERSION \
            -p environment=test \
            -p frontend.fqdn=${SAUSAGE_STORE_URL} \
            -p secrets.vaultToken=${VAULT_TOKEN}\
            -p secrets.vaultHost=${VAULT_HOST} \
            -p secrets.dockerConfigJson=${DOCKER_CONFIG_JSON}
    - argocd --grpc-web --auth-token $ARGO_TOKEN --server $ARGO_URL app sync $ARGO_APPLICATION_NAME
      
  environment:
    name: helm-pack
    url: https://$SAUSAGE_STORE_URL
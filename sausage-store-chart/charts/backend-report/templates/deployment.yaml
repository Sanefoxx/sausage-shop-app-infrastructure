apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "sausage-store.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: "{{ .Values.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.name }}"
    spec:
      containers:
        - image: {{ .Values.global.imageRegistry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          name: "{{ .Values.name }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: VAULT_HOST
              valueFrom:
                secretKeyRef:
                  name: vault-helm
                  key: vault_host
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-helm
                  key: vault_token
            - name: BACKEND_PORT
              value: "{{ .Values.global.backendPort }}"
            - name: SPRING_FLYWAY_BASELINE
              value: "{{ .Values.global.springFlywayBaseline }}"
          ports:
            - name: backend-report
              containerPort: {{ .Values.global.backendPort }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.global.backendPort }}
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 2
            failureThreshold: 6
      imagePullSecrets:
        - name: docker-config-secret-helm